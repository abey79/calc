pub mod error_context;

use crate::data::token::TokenKind;
use error_context::ErrorContext;
use thiserror::Error;

/// Errors generated by the tokenizer
#[derive(Error, Debug, PartialEq)]
pub enum SyntaxError {
    #[error("unexpected end of file")]
    UnexpectedEndOfFile,

    #[error("unexpected character '{0}'")]
    UnexpectedCharacter(char),

    #[error("unexpected token: {0}")]
    UnexpectedToken(TokenKind),
}

/// Errors generated by the tokenizer
#[derive(Error, Debug, PartialEq)]
pub enum TokenizerError {
    #[error("{1}Syntax error:{0}")]
    SyntaxError(SyntaxError, ErrorContext),
}

/// Errors generated by the parser
#[derive(Error, Debug, PartialEq)]
pub enum ParserError {
    #[error("{1}Syntax error:{0}")]
    SyntaxError(SyntaxError, ErrorContext),
}
